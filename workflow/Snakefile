include: "rules/common.smk"
include: "rules/inputfunctions.smk"

rule all:
    input:
        unpack(all)


# Pseudo-target using expand
rule all_qc:
    input:
        all_qc_fastqc

"""
rule all:
	input:
		[config['outdir']+'/align/{sample}.sorted.bam'.format(sample=sample_id) for sample_id in sample_ids],
		[config['outdir']+'/align/{sample}.sorted.bam.bai'.format(sample=sample_id) for sample_id in sample_ids],
		[config['outdir']+'/align/{sample}.mito.sorted.bam'.format(sample=sample_id) for sample_id in sample_ids],
		[config['outdir']+'/align/{sample}.mito.reverted.bam'.format(sample=sample_id) for sample_id in sample_ids],
		[config['outdir']+'/align/{sample}.mito.reverted_1.fq'.format(sample=sample_id) for sample_id in sample_ids],
		[config['outdir']+'/align/{sample}.mito.reverted_2.fq'.format(sample=sample_id) for sample_id in sample_ids],
		[config['outdir']+'/align/{sample}_mt_ref.bam'.format(sample=sample_id) for sample_id in sample_ids],
		[config['outdir']+'/align/{sample}_mt_shift.bam'.format(sample=sample_id) for sample_id in sample_ids],
		[config['outdir']+'/align/{sample}_merged_mtref.bam'.format(sample=sample_id) for sample_id in sample_ids],
		[config['outdir']+'/align/{sample}_merged_mtshft.bam'.format(sample=sample_id) for sample_id in sample_ids],
		[config['outdir']+'/align/{sample}_mtmerged_refdup.bam'.format(sample=sample_id) for sample_id in sample_ids],
		[config['outdir']+'/align/{sample}_mtmerged_refdup_met.txt'.format(sample=sample_id) for sample_id in sample_ids],
		[config['outdir']+'/align/{sample}_mtmerged_shftdup.bam'.format(sample=sample_id) for sample_id in sample_ids],
		[config['outdir']+'/align/{sample}_mtmerged_shftdup_met.txt'.format(sample=sample_id) for sample_id in sample_ids],
		[config['outdir']+'/haplo/{sample}/contamination/contamination.txt'.format(sample=sample_id) for sample_id in sample_ids],
		[config['outdir']+'/haplo/{sample}/report/report.html'.format(sample=sample_id) for sample_id in sample_ids],
		[config['outdir']+'/variants/{sample}_mtmerged_ref.vcf'.format(sample=sample_id) for sample_id in sample_ids],
		[config['outdir']+'/variants/{sample}_mtmerged_shft.vcf'.format(sample=sample_id) for sample_id in sample_ids],
		[config['outdir']+'/variants/{sample}_mtmerged_lift.vcf'.format(sample=sample_id) for sample_id in sample_ids],
		[config['outdir']+'/variants/{sample}_rejected_lift.vcf'.format(sample=sample_id) for sample_id in sample_ids],
		[config['outdir']+'/variants/{sample}_mtmerged_combined.vcf'.format(sample=sample_id) for sample_id in sample_ids],
		[config['outdir']+'/variants/{sample}_mtmerged_filtered.vcf'.format(sample=sample_id) for sample_id in sample_ids],
		[config['outdir']+'/variants/{sample}_mtmerged_filtered_brm.vcf'.format(sample=sample_id) for sample_id in sample_ids],
		[config['outdir']+'/variants/{sample}_mtmerged_combined_brm_annotated.vcf'.format(sample=sample_id) for sample_id in sample_ids]
"""

include: "rules/qc.smk"

# include: "rules/align.smk"
# include: "rules/prnrd.smk"
# include: "rules/revertsam.smk"
# include: "rules/samtofq.smk"
# include: "rules/mitoaln.smk"
# include: "rules/mitoaln_shft.smk"
# include: "rules/mergmt_ref.smk"
# include: "rules/mergmt_shft.smk"
# include: "rules/rdup_ref.smk"
# include: "rules/rdup_shf.smk"
# include: "rules/haplo.smk"
# include: "rules/mutek_ref.smk"
# include: "rules/mutek_shf.smk"
# include: "rules/lift.smk"
# include: "rules/mergevcf.smk"
# include: "rules/filter.smk"
# include: "rules/blacklist.smk"
# include: "rules/annot.smk"
